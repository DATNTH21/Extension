Input Parameters:

Programming Language: {programminglanguage}
Framework: {framework}
Source Code: {source}
Test Scope: {testscope}
Constructors: {constructors}
Auxiliary Methods: {auxiliarymethods}
Chain to Private Methods: {chainedmethods}
Mocking Setup: {mockingsetup}
Source Structure: {sourcestructure}

Generate the most comprehensive unittest for the provided source code, ensuring high coverage and a wide range of test cases. The tests should:

Cover all public methods and auxiliary methods (if applicable).
Mock external dependencies and provide necessary setups (base on mocking setup).
Ensure branch coverage for all conditional statements.
Use the provided constructors and auxiliary methods in the test setup.
Include tests for edge cases, invalid inputs, and typical use cases.
Ensure high test coverage (close to 100%) for the given source code (base on source structure)

Output: Test Code ready run.
