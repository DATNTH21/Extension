using HRMSystem.Services;
using HRMSystem.Models;

using Microsoft.AspNetCore.Mvc;

namespace HRMSystem.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class ActivityController : ControllerBase
    {
        private readonly IActivityService _ActivityService;

        public ActivityController(IActivityService activityService)
        {
            _ActivityService = activityService;
        }

        [HttpGet]
        public IActionResult GetAllActivities()
        {
            var result = _ActivityService.GetAllActivities();
            return Ok(result);
        }

        [HttpGet("NotJoined/{maNV}")]
        public IActionResult GetNotJoinedActivities(string maNV)
        {
            var unjoinedActivities = _ActivityService.GetActivitiesNotJoinedByEmployee(maNV);
            return Ok(unjoinedActivities);

        }
        [HttpGet("{id}")]
        public IActionResult GetActivityById(int id)
        {
            var activity = _ActivityService.GetActivityById(id);
            if (activity == null) return NotFound(new { Message = "Hoạt động không tồn tại!" });
            return Ok(activity);
        }

        [HttpPost]
        public IActionResult AddActivity([FromBody] Activity activity)
        {
            var newActivity = _ActivityService.AddActivity(activity);
            return Ok(new { Message = "Thêm mới hoạt động thành công!", Activity = newActivity });
        }

        [HttpPut("{id}")]
        public IActionResult UpdateActivity(int id, [FromBody] Activity activity)
        {
            var updatedActivity = _ActivityService.UpdateActivity(id, activity);
            if (updatedActivity == null) return NotFound(new { Message = "Hoạt động không tồn tại!" });
            return Ok(new { Message = "Cập nhật hoạt động thành công!", Activity = updatedActivity });
        }

        [HttpDelete("{id}")]
        public IActionResult DeleteActivity(int id)
        {
            var isDeleted = _ActivityService.DeleteActivity(id);
            if (!isDeleted) return NotFound(new { Message = "Hoạt động không tồn tại!" });
            return Ok(new { Message = "Xóa hoạt động thành công!" });
        }
    }
}
